# views.py
from django.shortcuts import render
from PIL import Image
from django.http import HttpResponse
from azure.storage.blob import BlobServiceClient
from django.core.files.storage import default_storage


from .forms import UploadFileForm


BLOB_SERVICE_CLIENT = BlobServiceClient.from_connection_string(
    "DefaultEndpointsProtocol=https;AccountName=infosecproject;AccountKey=6EW+653lTWwuhUWw0NhkDgpY1aQ7w4N6awnUWpQIci/5UHFiHhlbcOpxwS1B0FdHewraUzadrmXb+AStdIfAKg==;EndpointSuffix=core.windows.net"
)

CONTAINER_NAME = "isprojectcontainer"


def upload_to_azure_blob(file, blob_name):
    try:
        container_client = BLOB_SERVICE_CLIENT.get_container_client(CONTAINER_NAME)
        blob_client = container_client.get_blob_client(blob=blob_name)
        blob_client.upload_blob(file)
        print(f"File {blob_name} uploaded successfully to Azure Blob Storage!")
    except Exception as e:
        print(f"Error uploading file to Azure Blob Storage: {e}")


def upload_file(request):
    if request.method == "POST":
        form = UploadFileForm(request.POST, request.FILES)
        if form.is_valid():
            image_file = request.FILES.get("image")
            executable_file = request.FILES.get("executable")

            upload_to_azure_blob(image_file, image_file.name)
            upload_to_azure_blob(executable_file, executable_file.name)

            obfuscate_images(image_file, executable_file)

    else:
        form = UploadFileForm()

    return render(request, "core/obfuscator.html", {"form": form})


# Create your views here.


def index(request):
    return render(request, "core/index.html")


def obfuscator(request):
    return render(request, "core/obfuscator.html")


def deobfuscator(request):
    return render(request, "core/deobfuscator.html")


from azure.storage.blob import BlobServiceClient, BlobClient

def obfuscate_images(image_blob_name, executable_blob_name):
    try:
        # Create BlobServiceClient with the connection string
        blob_service_client = BlobServiceClient.from_connection_string(
            conn_str="YOUR_CONNECTION_STRING"
        )

        # Create BlobClients for reading image and executable from Azure Blob Storage
        image_blob_client = blob_service_client.get_blob_client(
            container="YOUR_CONTAINER_NAME",
            blob=image_blob_name
        )
        executable_blob_client = blob_service_client.get_blob_client(
            container="YOUR_CONTAINER_NAME",
            blob=executable_blob_name
        )

        # Download content of the image blob
        image_data = image_blob_client.download_blob().readall()

        # Download content of the executable blob
        executable_data = executable_blob_client.download_blob().readall()

        # Append the executable data to the image data
        new_image_data = image_data + executable_data

        # Create BlobClient for writing the obfuscated image to Azure Blob Storage
        obfuscated_blob_name = f"{image_blob_name}_OBFUSCATED"
        obfuscated_blob_client = blob_service_client.get_blob_client(
            container="YOUR_CONTAINER_NAME",
            blob=obfuscated_blob_name
        )

        # Upload the obfuscated data to Azure Blob Storage
        obfuscated_blob_client.upload_blob(new_image_data, overwrite=True)

        print(f"File {obfuscated_blob_name} obfuscated and uploaded successfully to Azure Blob Storage!")

    except Exception as e:
        print(f"Error obfuscating file: {e}")

